Simple Framework for SSO
---------------------------------
1.框架分为Client和Server两块:
	Client是一个Filter, 加入到中Apps;
	Server是一个Servlet, 实现用户登录模块后部署到Web容器.
2.本框架只负责用户单点登录，统一登录，统一注销，应该不涉及任何用户权限的存储，权限应由各Apps自行管理。
3.结构图如下图structure.gif
4.交互流程图如下：
Apps(Client)			Filter					SSOAuth(Server)
							| <-- User
		 <- has session ? - |
doFilter <- Y --|			|
		 -- N -------------	| -- goto with referer url --> has session ?
							| <- goto with ticket -- Y ---
							| -- check ticket with RPC --> delete ticket 
							|				record app's url and user information
doFilter <- add session --- | ---------- Y ----- RPC -----
check error method <------- | ---------- N ----- RPC -----
							|		 			|--- N --> Login <--|
							|								|-- N --|
							| -- goto with ticket ------------- Y --> add session
							| ...
							|

### Question
1.Apps是否保存自己的session?	
	是, 不然Server的访问量会太大。
2.用户亲自去验证对子站的可访问性，还是子站通过RPC去验证站询问?
	RPC
3.在子应用运行时间长后,回来还有session吗?
	有, Tell Server I am alive.
4.server与client通讯加密如何作?
	
5.注销是否对server有效,其他子系统是否也要一起注销。
	是,是
6.如何防止违照的验证站返回?
	use ticket.
7.sso应该有个信任域名列表,用来判断App过来的ticket有效性，以及回跳的地址是否可靠。
	是
8.
	
9.
	
